# ContractA.starknet

@public
@payable
def deposit():
    # Handle deposit logic
    pass

@public
def sendToB(message: int, amount: uint128):
    # Call ContractB's receiveMessage method to send a message
    invoke_contract("0xContractBAddress", "receiveMessage(uint256)", message)

    # Transfer tokens to ContractB
    starknet.transfer(to="0xContractBAddress", amount=amount)

# ContractB.starknet

@public
@payable
def deposit():
    # Handle deposit logic
    pass

@public
def receiveMessage(message: int):
    # Handle receiving message logic
    pass

@public
def sendToA(message: int, amount: uint128):
    # Call ContractA's receiveMessage method to send a message
    invoke_contract("0xContractAAddress", "receiveMessage(uint256)", message)

    # Transfer tokens to ContractA
    starknet.transfer(to="0xContractAAddress", amount=amount)
